import java.util.*;

public class PlayerSkeleton {

    //implement this function to have a working system
    public int pickMove(State s, int[][] legalMoves) {
        //Chromosome c = Learner.GetBestCandidate();
        //Chromosome c = new SimpleChromosome(-25.3, -40.4, -12.3, -14.9);
        //Chromosome c = new SimpleChromosome(-27.6119, -47.503, -49.41, -2.52505);
    	

		// double[] d = new double[]{-20.0, -10.0, -10.0, 0, 0, 0, 0};
    	// double[] d = new double[]{0, -10, 0, 0, 0, 0, 0};
    	// double[] d = new double[]{-0.4255216464128099,-0.09169136063804906,-0.39914340921207014,-0.056224417464258325,-0.004315414795928674,-0.46854982136532564,-0.4564261368872249};
    	 // double[] d = {-0.4186641840188783,-0.11658629534372345,-0.46462935406919725,-0.047555870194355365,0.010479259832076426,0.22926620387114072,0.06520258917420518};
    	// double[] d = {-0.454944595225789,-0.31117463749768126,-0.26798448005579933,0.03458328418424961,-0.3654701646392101,0.3390836793124713,-0.40477254493737713};
    	// double[] d = {-0.4980295305135991,-0.4315627025645594,-0.45286302929418853,0.020816590047498806,-0.22605251742078147,-0.3285249035676846,0.20842924213682446,-0.050628747107058,0.49217281372994803};
    	//double[] d = {-0.4074583533555105,-0.39592242146631973,-0.30568475702855313,0.18303328544235653,-0.003916222289412574,0.013483281800154567,0.32167287053488125,-0.4362985461566685,0.4863468144027401};
    	// double[] d = new double[]{-0.31435940126625794,-0.21563515333255528,-0.3729786695320991,0.021052304432286117,0.008910294859162615,0.02223342029481823,-0.38886237185861094,0.2137576521904011,0.44813680599822514};
    	// Chromosome c = new SimpleChromosome();
    	// Chromosome c = new SimpleChromosome();
    	// double[] d = {-0.41780743697556083,-0.12828949309340187,-0.10938652819459632,-0.4060125718386902,-0.046853368425207875,0.02649212513421295,-0.364798809338733,-0.03412198300199676,-0.4675060706061805,-0.31535113454579894,0.02960157698467447,-0.2912157889414652,0.020198053922596437};
    	// double[] d = {-0.41782037211480566,-0.1282953045462702,-0.10999687975738054,-0.40602067807038345,-0.03415805591929616,0.026521748642680087,-0.36187675123190355,-0.10229776082667419,-0.45804587470276553,-0.3212104499438826,0.013721558504608211,-0.2921922415458561,0.019710011090948276};
    	// double[] d = {-0.4178203739774508,-0.17504298858113726,-0.10991772292643681,-0.40602043499519136,-0.03466172122147948,0.026560897252783544,-0.48983313096213765,-0.10217564813894014,-0.49713827250392095,-0.32060207138797364,0.013852598384885395,-0.292192354701549,0.020189530924050847};
    	//double[] d = {-0.417564253284393,-0.1723326461726486,-0.10999688162002569,-0.4060080372290723,-0.015989666113625123,0.026553264132958443,-0.4886741894244562,-0.10229776315498063,-0.4684861446584045,-0.315347260709548,0.013974428416217877,-0.2921923574955167,0.02019071929165661};
    	// double[] d = {-0.41780797621133176,-0.17220580655718493,-0.10999783482868125,-0.4060700297849579,-0.0024351512558922206,0.02656089445881582,-0.4893179475280074,-0.10229776315498063,-0.4685052023122577,-0.31522907308080655,0.013974637032474702,-0.2921312129088357,0.019702441766719536};
    	// double[] d = {-0.46164799712675064,0.27910540382336146,-0.2100060469051851,0.21861862936924148,-0.09316840236688423,0.04856861687664349,-0.4478849651980609,-0.3356909471730194,-0.06496214892946284,-0.46788501598308097,0.09449814194557171,-0.3435484691725804,-0.10406772727336161};
    	//double[] d = {-0.491631364911623,0.31781579638729607,-0.12885111366810792,0.13903961360409833,-0.05229998591928742,-0.05826996618801261,-0.43541223506229565,0.11758260783626817,-0.32091589217116867,0.3168573830355226,-0.1655267470821397,-0.22031709259390697,-0.11369647160810253};
    	double[] d = {-0.49163513304276163,0.3200104179885287,-0.012245116528237732,0.13906195789531894,-0.08375121866527535,-0.05826233679347781,-0.4061055038618415,-0.054260433909604555,-0.46156522257326416,0.0980788262552017,-0.05774901367619123,-0.3284408551773247,-0.11760918126330205};
    	Chromosome c = new BetterChromosome(d);
    	int i = c.pickMove(s);
        return i;
    }

    public static void main(String[] args) {

    	/*
        // UNCOMMENT FOR LEARNING
        List<Chromosome> initialPop = new ArrayList<Chromosome>();
        for (int x = 0; x < 100; x++) { // <------------modify population size here
        	initialPop.add(new BetterChromosome());
        }
        SimpleGA ga = new ClearSimilaritiesGA(initialPop, 13, 0.10, 0.6);
        Learner learner = new Learner(ga);

        System.out.println("Learner Made");

        // Number of generations
        learner.Run(1000);
        */
    	
    	
    	
    	// VERITIFICATION PART
    	int sum = 0;
    	// REsults 0
    	// double[] d = {-0.417564253284393,-0.1723326461726486,-0.10999688162002569,-0.4060080372290723,-0.015989666113625123,0.026553264132958443,-0.4886741894244562,-0.10229776315498063,-0.4684861446584045,-0.315347260709548,0.013974428416217877,-0.2921923574955167,0.02019071929165661};
    	//double[] d = {-0.2394862327442906,-0.0561327066068224,0.1629372489000378,0.1516718597391955,-0.06611188248084482,0.14793067129698145,-0.48313716146309726,-0.23340582043556768,-0.49975903937581884,-0.32662865325185875,-0.20806272640268447,-0.35585567208745317,-0.0903697938613453};
    	//double[] d = {-0.23947288223517726,-0.05807724807321896,0.06915720858106256,0.15165943123943149,-0.08368708872408004,0.13026325853088094,-0.48300831810711337,-0.24778865591985577,-0.4956965344006645,-0.32661245289566576,-0.20806268169920084,-0.3558666486553227,-0.0903658413283368};
    	// Results 1
    	double [] d = {-0.49163513304276163,0.3200104179885287,-0.012245116528237732,0.13906195789531894,-0.08375121866527535,-0.05826233679347781,-0.4061055038618415,-0.054260433909604555,-0.46156522257326416,0.0980788262552017,-0.05774901367619123,-0.3284408551773247,-0.11760918126330205};
    	//double[] d = {-0.46189285347326325,0.26909636788493785,-0.20997259752357966,0.21794615486541113,-0.09289373671305073,0.06028707072152151,-0.4478925927299506,-0.32006560304205195,-0.2055788052759966,-0.46655273296244104,0.09449814194557171,-0.3827330255334885,-0.10431952337004224};
    	for (int i = 0; i < 200; i++) {
    		Simulator s = new Simulator(100);
    		int k = s.getNumLinesRemoved(new BetterChromosome(d));
    		sum += k;
    		System.out.println(k);
    	}
    	System.out.println((double)(sum)/200);
    	
    	
    	// SHOW GAME PART
		/*
        // Remember to remove top part
        State s = new State();
        new TFrame(s);
        PlayerSkeleton p = new PlayerSkeleton();
        while (!s.hasLost()) {
            System.out.println("------------------------------------------------------------------------------------------");
            s.makeMove(p.pickMove(s, s.legalMoves()));
            s.draw();
            s.drawNext(0, 0);

            try {
                Thread.sleep(5);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        System.out.println("You have completed " + s.getRowsCleared() + " rows.");
        */
    }
}
